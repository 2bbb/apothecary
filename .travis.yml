language: c++
sudo: false
matrix:
  include:
# fully specify builds, include can't dynamically expand matrix entries
# relative order of sudo and env is important so that addons: is recognized

#    - os: linux
#      sudo: required
#      dist: trusty
#      env: 
#       - TARGET="linux"
#       - CC=gcc
#       - CXX=g++ -std=c++11
#      addons:
#        apt:
#          packages:
#          - libxrandr-dev
#          - libxinerama-dev
#          - libx11-dev
#          - libxcursor-dev
#          - libxi-dev
#      before_script:
#        - sudo add-apt-repository ppa:dns/gnu -y
#        - sudo apt-get update -q
#        - sudo apt-get install -y coreutils realpath


    - os: linux
      sudo: required
      dist: trusty
      env: 
        - TARGET="linux" 
        - OPT="gcc5"

#    - os: linux
#      sudo: required
#      dist: trusty
#      env: TARGET="android" OPT="armv7"
#      before_script:
#        - sudo add-apt-repository ppa:dns/gnu -y
#        - sudo apt-get update -q
#        - sudo apt-get install -y --only-upgrade autoconf
#        - sudo apt-get install -y xutils-dev coreutils realpath libboost-tools-dev
#      cache:
#        directories:
#        - ~/android-ndk-r12b
#        - apothecary/build/Toolchains/armv7

#    - os: linux
#      sudo: required
#      dist: trusty
#      env: TARGET="android" OPT="x86"
#      before_script:
#        - sudo add-apt-repository ppa:dns/gnu -y
#        - sudo apt-get update -q
#        - sudo apt-get install -y --only-upgrade autoconf
#        - sudo apt-get install -y xutils-dev realpath libboost-tools-dev
#      cache:
#        directories:
#        - ~/android-ndk-r12b
#        - apothecary/build/Toolchains/x86


#    - os: linux
#      sudo: false
#      env: TARGET="emscripten"
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - libstdc++6
#            - gcc-4.9
#            - realpath
#            - coreutils
#            - libboost-dev


#    - os: linux
#      sudo: required
#      dist: trusty
#      env: TARGET="linuxarmv6l" SYSROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/raspbian" TOOLCHAIN_ROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/rpi_toolchain" TOOLCHAIN_PREFIX=arm-linux-gnueabihf


#    - os: linux
#      sudo: required
#      dist: trusty
#      env: TARGET="linuxarmv7l" SYSROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/archlinux" TOOLCHAIN_ROOT="$HOME/rpi2_toolchain" TOOLCHAIN_PREFIX=arm-linux-gnueabihf


#    - os: osx
#      osx_image: xcode7.1
#      compiler: clang
#      env: TARGET="osx" OPT2="1"

#    - os: osx
#      osx_image: xcode7.1
#      compiler: clang
#      env: TARGET="osx" OPT2="2"

#    - os: osx
#      osx_image: xcode8
#      compiler: clang
#      env: TARGET="ios" OPT2="1"


#    - os: osx
#      osx_image: xcode8
#      compiler: clang
#      env: TARGET="ios" OPT2="2"


#    - os: osx
#      osx_image: xcode8
#      compiler: clang
#      env: TARGET="tvos" OPT2="1"


#    - os: osx
#      osx_image: xcode8
#      compiler: clang
#      env: TARGET="tvos" OPT2="2"


  exclude:
    - compiler: gcc
install:
    - if [ "$TARGET" == "android" ] || [ "$TARGET" == "ios" ] || [ "$TARGET" == "tvos" ] || [ "$TARGET" == "linux" ] || [ "$TARGET" == "linuxarmv6l" ] || [ "$TARGET" == "linuxarmv7l" ] || [ "$TARGET" == "emscripten" ]  || [ "$TARGET" == "osx" ] || [[ "$TARGET" == "linux64" && "$OPT" == "gcc5" ]]; then
        scripts/$TARGET/install.sh $OPT $OPT2;
      fi
script:
    - scripts/build.sh $OPT $OPT2
git:
    depth: 10
