language: c++
sudo: false
matrix:
  include:
# fully specify builds, include can't dynamically expand matrix entries
# relative order of sudo and env is important so that addons: is recognized

    # linux 64
    - os: linux
      sudo: required
      dist: trusty
      env:
       - TARGET="linux"
       - USE_CCACHE=true
       - CCACHE_DIR=/tmp/ccache/linux/
      cache:
        directories:
        - /tmp/ccache/linux/
      

    - os: linux
      sudo: required
      dist: trusty
      env:
        - TARGET="linux"
        - OPT="gcc5"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/linuxgcc5/
      cache:
        directories:
        - /tmp/ccache/linuxgcc5/
      
      

    - os: linux
      sudo: required
      dist: trusty
      env:
        - TARGET="linux"
        - OPT="gcc6"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/linuxgcc6/
      cache:
        directories:
        - /tmp/ccache/linuxgcc6/


    # android
    - os: linux
      sudo: required
      dist: trusty
      env: 
        - TARGET="android" 
        - ARCH="armv7"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/androidarmv7/

      cache:
        directories:
        - ~/android-ndk-r15c
        - /tmp/ccache/androidarmv7/
        # - apothecary/build/Toolchains/armv7

    - os: linux
      sudo: required
      dist: trusty
      env: 
        - TARGET="android" 
        - ARCH="x86"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/androidx86/
      cache:
        directories:
        - ~/android-ndk-r15c
        - /tmp/ccache/androidx86/
        # - apothecary/build/Toolchains/x86


    # emscripten
    - os: linux
      sudo: required
      dist: trusty
      env: 
        - TARGET="emscripten"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/emscripten/
      cache:
        directories:
        - /tmp/ccache/emscripten/
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++6
            - gcc-4.9
            - realpath
            - coreutils
            - libboost-tools-dev
            - gperf
            #- libboost-dev


    # linux arm6
    - os: linux
      sudo: required
      dist: trusty
      env: 
        - TARGET="linuxarmv6l" 
        - SYSROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/raspbian" 
        - TOOLCHAIN_ROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/rpi_toolchain" 
        - TOOLCHAIN_PREFIX=arm-linux-gnueabihf


    # linux arm7
    - os: linux
      sudo: required
      dist: trusty
      env: 
        - TARGET="linuxarmv7l" 
        - SYSROOT="$HOME/archlinux" 
        - TOOLCHAIN_ROOT="$HOME/rpi2_toolchain" 
        - TOOLCHAIN_PREFIX=arm-linux-gnueabihf


    # osx xcode7
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="osx" 
        - BUNDLE="1"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/osx1/
      cache:
        directories:
        - /tmp/ccache/osx1/

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="osx" 
        - BUNDLE="2"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/osx2/
      cache:
        directories:
        - /tmp/ccache/osx1/


    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="osx" 
        - BUNDLE="3"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/osx3/
      cache:
        directories:
        - /tmp/ccache/osx3/


    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="osx" 
        - BUNDLE="4"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/osx4/
      cache:
        directories:
        - /tmp/ccache/osx4/

    # ios
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="ios" 
        - BUNDLE="1"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/ios1/
      cache:
        directories:
        - /tmp/ccache/ios1/

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="ios" 
        - BUNDLE="2"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/ios2/
      cache:
        directories:
        - /tmp/ccache/ios2/

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="ios" 
        - BUNDLE="3"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/ios3/
      cache:
        directories:
        - /tmp/ccache/ios3/

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="ios" 
        - BUNDLE="4"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/ios4/
      cache:
        directories:
        - /tmp/ccache/ios4/

    # tvos
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="tvos" 
        - BUNDLE="1"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/tvos1/
      cache:
        directories:
        - /tmp/ccache/tvos1/

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="tvos" 
        - BUNDLE="2"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/tvos2/
      cache:
        directories:
        - /tmp/ccache/tvos2/

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="tvos" 
        - BUNDLE="3"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/tvos3/
      cache:
        directories:
        - /tmp/ccache/tvos3/
  
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: 
        - TARGET="tvos" 
        - BUNDLE="4"
        - USE_CCACHE=true
        - CCACHE_DIR=/tmp/ccache/tvos4/
      cache:
        directories:
        - /tmp/ccache/tvos4/


  exclude:
    - compiler: gcc
install: scripts/$TARGET/install.sh
script:
    - scripts/build.sh
git:
    depth: 10
